name: CI

on:
  push:
    branches: '*'
    tags: v*
  pull_request:
    branches:
      - master
  schedule:
    - cron: 0 0 * * *

env:
  MACOSX_DEPLOYMENT_TARGET: 10.9

defaults:
  run:
    shell: bash

jobs:
  # test:
  #   name: Test
  #   runs-on: ${{ matrix.os == 'freebsd' && 'macOS-latest' || matrix.os }}
  #   continue-on-error: ${{ matrix.nightly == 'nightly' }}
  #   env:
  #     DLP_ARCH: ${{ matrix.arch }}
  #     DLP_COMPILER: ${{ matrix.compiler }}
  #   strategy:
  #     matrix:
  #       arch: [x86_64]
  #       os:
  #         - macOS-latest
  #         - ubuntu-latest
  #         - windows-latest
  #         - freebsd
  #
  #       compiler:
  #         - dmd-latest
  #         - ldc-latest
  #
  #       include:
  #         - os: windows-latest
  #           compiler: dmd-latest
  #           arch: x86
  #
  #         - os: windows-latest
  #           compiler: ldc-latest
  #           arch: x86
  #
  #         - os: ubuntu-latest
  #           compiler: dmd-beta
  #           arch: x86_64
  #
  #         - os: ubuntu-latest
  #           compiler: ldc-beta
  #           arch: x86_64
  #
  #         - os: ubuntu-latest
  #           compiler: dmd-master
  #           arch: x86_64
  #           nightly: nightly
  #
  #         - os: ubuntu-latest
  #           compiler: ldc-master
  #           arch: x86_64
  #           nightly: nightly
  #
  #   steps:
  #     - name: Clone Repository
  #       uses: actions/checkout@v2
  #       with:
  #         persist-credentials: false
  #
  #     - name: Install Compiler
  #       uses: dlang-community/setup-dlang@v1
  #       if: ${{ matrix.os != 'freebsd' }}
  #       with:
  #         compiler: ${{ matrix.compiler }}
  #
  #     - name: Test
  #       if: ${{ matrix.os != 'freebsd' }}
  #       run: |
  #         export DMD="$(./tools/install_dc.sh)"
  #         ./.github/workflows/ci.sh
  #
  #     - name: Test FreeBSD
  #       if: ${{ matrix.os == 'freebsd' }}
  #       uses: vmactions/freebsd-vm@v0.0.8
  #       with:
  #         usesh: true
  #         envs: 'DLP_COMPILER DLP_ARCH'
  #         run: |
  #           pkg update
  #           pkg install -y bash curl gnupg git llvm-90
  #           export DMD="$(./tools/install_dc.sh)"
  #           ./.github/workflows/ci.sh

  create_release:
    name: Create Release
    # needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ${{ matrix.os == 'freebsd' && 'macOS-latest' || matrix.os }}
    env:
      DLP_ARCH: ${{ matrix.arch }}
      DLP_COMPILER: ldc-latest
    strategy:
      matrix:
        arch: [x86_64]
        os:
          # - macOS-latest
          # - ubuntu-latest
          # - windows-latest
          - freebsd

        # include:
        #   - os: windows-latest
        #     arch: x86

    steps:
      - name: Clone Repository
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Install Compiler
        uses: dlang-community/setup-dlang@v1
        if: ${{ matrix.os != 'freebsd' }}
        with:
          compiler: ${{ env.DLP_COMPILER }}

      - name: Build
        if: ${{ matrix.os != 'freebsd' }}
        run: |
          export DMD="$(./tools/install_dc.sh)"
          ./tools/build_release.sh

      - name: Build FreeBSD
        if: ${{ matrix.os == 'freebsd' }}
        uses: vmactions/freebsd-vm@v0.0.8
        with:
          usesh: true
          envs: 'DLP_COMPILER DLP_ARCH'
          run: |
            pkg update
            pkg install -y bash curl gnupg git llvm-90
            export DMD="$(./tools/install_dc.sh)"
            ./tools/build_release.sh

      - name: Extract Version
        id: version
        run: echo ::set-output name=VERSION::$(./dlp --version)

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: DLP ${{ steps.version.outputs.VERSION }}
          draft: true
          files: |
            dlp*.tar.xz
            dlp*.7z
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
